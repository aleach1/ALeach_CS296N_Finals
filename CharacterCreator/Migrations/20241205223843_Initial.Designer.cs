// <auto-generated />
using System;
using CharacterCreator.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CharacterCreator.Migrations
{
    [DbContext(typeof(CharacterCreatorContext))]
    [Migration("20241205223843_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CharacterCreator.Models.Character", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AccountUsername")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Backstory")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("MoralAlignment")
                        .HasColumnType("longtext");

                    b.Property<string>("Motivation")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhysicalDescription")
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountUsername");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("CharacterCreator.Models.User", b =>
                {
                    b.Property<string>("Username")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Username");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CharacterCreator.Models.Character", b =>
                {
                    b.HasOne("CharacterCreator.Models.User", "Account")
                        .WithMany()
                        .HasForeignKey("AccountUsername");

                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
